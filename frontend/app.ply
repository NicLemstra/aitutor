import streamlit as st
from langchain.chat_models import ChatOpenAI
from langchain.vectorstores import FAISS
from langchain.embeddings import OpenAIEmbeddings
from langchain.document_loaders import UnstructuredPDFLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.chains import ConversationalRetrievalChain
import tempfile
import os

st.set_page_config(page_title="ðŸ“˜ AI Tutor", layout="wide")
st.title("ðŸ“˜ AI Tutor: Chat With Your Class Notes")

# Initialize session state
if "chain" not in st.session_state:
    st.session_state.chain = None
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# Upload PDF
uploaded_file = st.file_uploader("Upload a class PDF to train your AI tutor", type=["pdf"])

if uploaded_file:
    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp_file:
        tmp_file.write(uploaded_file.read())
        tmp_path = tmp_file.name

    st.success("âœ… PDF uploaded. Preparing your tutor...")

    # Load PDF, split, embed, create vectorstore
    loader = UnstructuredPDFLoader(tmp_path)
    docs = loader.load()
    splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=100)
    chunks = splitter.split_documents(docs)
    embeddings = OpenAIEmbeddings()
    vectorstore = FAISS.from_documents(chunks, embeddings)

    # Create AI chat chain
    llm = ChatOpenAI(model_name="gpt-4", temperature=0)
    st.session_state.chain = ConversationalRetrievalChain.from_llm(
        llm=llm,
        retriever=vectorstore.as_retriever()
    )
    st.success("ðŸŽ“ Your AI Tutor is ready!")

# Chat Interface
if st.session_state.chain:
    question = st.text_input("Ask a question about the course material:")
    if question:
        result = st.session_state.chain({
            "question": question,
            "chat_history": st.session_state.chat_history
        })
        st.session_state.chat_history.append((question, result["answer"]))
    
    for q, a in st.session_state.chat_history:
        st.markdown(f"**You:** {q}")
        st.markdown(f"**Tutor:** {a}")
